#!/usr/bin/env bash

# This is a postinstall template.
# Remove all what you dont need.
# Make sure the script is executable as a program before run.
# If you need a log file execute this script like this: ./my_skript.sh > ~/Desktop/my_script_log.txt 2>&1

# With " > /dev/null 2>&1 " disables show command.
# It is recommend to set a " wait %2 " that ensures thats all tasks are realy done.

# Last Edit: <Date>

echo ""
echo " Write your welcome text"
echo ""
read -p "Press any key to continue.."
clear

# Add needed 32 bit support 
sudo dpkg --add-architecture i386

# System upgrade (Debian)
sudo apt udate > /dev/null 2>&1
sudo apt upgrade -y > /dev/null 2>&1
sudo apt dist-upgrade -y > /dev/null 2>&1

# System upgrade (Archlinux)
sudo pacman Syyu --noconfirm > /dev/null 2>&1



# Install packages (System) (Debian)
sudo apt install -y package1 package2 > /dev/null 2>&1
wait %2

# Install packages (Multimedia) (Debian)
sudo apt install -y package1 package2 > /dev/null 2>&1
wait %2

# Install packages (Gaming) (Debian)
sudo apt install -y package1 package2 > /dev/null 2>&1
wait %2


# Install packages (System) (Archlinux)
sudo apt install -y package1 package2 > /dev/null 2>&1
wait %2

# Install packages (Multimedia) (Archlinux)
sudo apt install -y package1 package2 > /dev/null 2>&1
wait %2

# Install packages (Gaming) (Archlinux)
sudo apt install -y package1 package2 > /dev/null 2>&1
wait %2

## "Liquorix Kernel"
#curl -s 'https://liquorix.net/install-liquorix.sh' | sudo bash
#clear


# Install flatpak (Debian)
sudo apt install flatpak 

# Install flatpak (Archlinux)
sudo pacman -S flatpak

# Set flatpak repo
sudo flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo



# Define your network interface, IP address, subnet mask, gateway, and DNS
INTERFACE="eth0"
IP_ADDRESS="192.168.1.100"
NETMASK="255.255.255.0"
GATEWAY="192.168.1.1"
DNS_SERVERS=("8.8.8.8" "8.8.4.4")

# Bring down the interface
sudo ip link set dev "$INTERFACE" down

# Assign IP address and netmask
sudo ip addr flush dev "$INTERFACE"
sudo ip addr add "$IP_ADDRESS"/24 dev "$INTERFACE"

# Set default gateway
sudo ip route add default via "$GATEWAY"

# Bring up the interface
sudo ip link set dev "$INTERFACE" up

# Configure DNS by overwriting /etc/resolv.conf
# Backup existing resolv.conf
sudo cp /etc/resolv.conf /etc/resolv.conf.bak

# Write new DNS servers
echo "# Generated by script" | sudo tee /etc/resolv.conf > /dev/null
for dns in "${DNS_SERVERS[@]}"; do
    echo "nameserver $dns" | sudo tee -a /etc/resolv.conf > /dev/null
done

echo "Network configuration applied."



# set various /etc/environment variables
# this variables are system wide
echo "
EDITOR=nano
VISUDO=nano
CPU_LIMIT=0
CPU_GOVERNOR=performance
GPU_USE_SYNC_OBJECTS=1
PYTHONOPTIMIZE=1
ELEVATOR=kyber
TRANSPARENT_HUGEPAGES=always
MALLOC_CONF=background_thread:true
MALLOC_CHECK=0
MALLOC_TRACE=0
LD_DEBUG_OUTPUT=0
LP_PERF=no_mipmap,no_linear,no_mip_linear,no_tex,no_blend,no_depth,no_alphatest
LESSSECURE=1
PAGER=less
EDITOR=nano
VISUAL=nano
AMD_VULKAN_ICD=RADV
RADV_PERFTEST=aco,sam,nggc
RADV_DEBUG=novrsflatshading
GAMEMODE=1
vblank_mode=1
PROTON_LOG=0
PROTON_USE_WINED3D=0
PROTON_FORCE_LARGE_ADDRESS_AWARE=1
PROTON_NO_ESYNC=1
PROTON_USE_FSYNC=1
DXVK_ASYNC=1
WINE_FSR_OVERRIDE=1
WINE_FULLSCREEN_FSR=1
WINE_VK_USE_FSR=1
WINEFSYNC_FUTEX2=1
WINEFSYNC_SPINCOUNT=24
MESA_BACK_BUFFER=ximage
MESA_NO_DITHER=0
MESA_SHADER_CACHE_DISABLE=false
mesa_glthread=true
MESA_DEBUG=0
" | sudo tee -a /etc/environment


# Enable ufw (If you wont to use ufw firewall)
sudo ufw enable
sudo ufw default deny incoming
sudo ufw default allow outgoing
sudo ufw allow http  # Allows HTTP (port 80)
sudo ufw allow https # Allows HTTPS (port 443)



# Filesystem trim
sudo systemctl enable fstrim.timer
sudo fstrim -av


# End
echo " All tasks are finish."

sleep 2
read -p "Press any key to reboot the system"